"""
Exit Watcher ‚Äî –Ω–∞—Ö–æ–¥–∏—Ç –ø–µ—Ä–≤—É—é –∏—Å—Ö–æ–¥—è—â—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å Bitcoin-–∞–¥—Ä–µ—Å–∞.
"""

import requests
import sys

def get_transactions(address):
    url = f"https://blockstream.info/api/address/{address}/txs"
    r = requests.get(url)
    r.raise_for_status()
    return r.json()

def find_first_spend(txs, address):
    for tx in reversed(txs):  # –æ—Ç —Å—Ç–∞—Ä—ã—Ö –∫ –Ω–æ–≤—ã–º
        for vin in tx.get("vin", []):
            if vin.get("prevout", {}).get("scriptpubkey_address", "") == address:
                return {
                    "txid": tx.get("txid"),
                    "timestamp": tx.get("status", {}).get("block_time"),
                }
    return None

def main(address):
    print(f"üì§ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤–æ–π –∏—Å—Ö–æ–¥—è—â–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å –∞–¥—Ä–µ—Å–∞: {address}")
    try:
        txs = get_transactions(address)
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:", e)
        return

    first_spend = find_first_spend(txs, address)
    if first_spend:
        from datetime import datetime
        ts = datetime.utcfromtimestamp(first_spend["timestamp"]).strftime("%Y-%m-%d %H:%M:%S")
        print(f"üîé –ü–µ—Ä–≤–∞—è –∏—Å—Ö–æ–¥—è—â–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞:")
        print(f"üÜî TXID: {first_spend['txid']}")
        print(f"üìÖ –î–∞—Ç–∞ (UTC): {ts}")
    else:
        print("‚úÖ –ê–¥—Ä–µ—Å –ø–æ–∫–∞ –Ω–µ —Ç—Ä–∞—Ç–∏–ª —Å—Ä–µ–¥—Å—Ç–≤–∞.")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python exit_watcher.py <bitcoin_address>")
        sys.exit(1)
    main(sys.argv[1])
